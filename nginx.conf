events {}

http {
    upstream backend_http {
        least_conn;  # Verwendet least connections für die Lastverteilung
        server backend:4000;  # Annahme, dass 'backend' der Service-Name in Docker Compose ist
    }

    upstream backend_ws {
         least_conn;  # Verwendet least connections für die Lastverteilung
        server backend:8080;  # Annahme, dass 'backend' der Service-Name in Docker Compose ist
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        access_log off;

        location / {
            proxy_pass http://backend_http;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /ws/ {
            proxy_pass http://backend_ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
